{
  "hash": "a73f87119abcf314645973a8b17151dc",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Understanding Linear Regression\"\ndate: \"2024-03-14\"\nseries: \"AI-news\"\n---\n\n# Understanding Linear Regression\n\nLinear regression is a foundational statistical method that models the relationship between a dependent variable and one or more independent variables by fitting a linear equation to observed data. \n\n## Simple Linear Regression\n\nSimple linear regression involves a single independent variable and a dependent variable. The goal is to find the linear relationship between these two variables.\n\n### The Formula\n\nThe formula for a simple linear regression line is \\(y = mx + c\\), where:\n\n- \\(y\\) is the dependent variable,\n- \\(x\\) is the independent variable,\n- \\(m\\) is the slope of the line,\n- \\(c\\) is the y-intercept.\n\n### Example in Python\n\nBelow is a simple Python example using `matplotlib` and `numpy` to perform and plot a linear regression.\n\n::: {#64a4cdce .cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.linear_model import LinearRegression\n\n# Sample data\nx = np.array([5, 15, 25, 35, 45, 55]).reshape((-1, 1))\ny = np.array([5, 20, 14, 32, 22, 38])\n\n# Linear regression\nmodel = LinearRegression().fit(x, y)\n\n# Making predictions\nx_pred = np.linspace(5, 55, 100).reshape((-1, 1))\ny_pred = model.predict(x_pred)\n\n# Plotting\nplt.scatter(x, y, color='blue', label='Data points')\nplt.plot(x_pred, y_pred, color='red', label='Regression line')\nplt.xlabel('X')\nplt.ylabel('Y')\nplt.title('Simple Linear Regression')\nplt.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](post1_files/figure-html/cell-2-output-1.png){width=585 height=449}\n:::\n:::\n\n\n![](img/image.png)\n\n",
    "supporting": [
      "post1_files"
    ],
    "filters": [],
    "includes": {}
  }
}